/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 wrist.glb
*/

import React, {useEffect, useRef} from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import Animate from "./Animate";

const Wrist = (props) => {
  const group = useRef()
  const wrist = useGLTF('/wrist.glb')
  const leggins = useGLTF('/leggins.glb')
  const animate = useGLTF('/animate.glb')
  //const { nodes, materials, animations } = useGLTF('/wrist.glb')
  //const {nodes} = useGLTF('/animate.glb')
  const { actions } = useAnimations(wrist.animations, group)
  useEffect(() => {
    actions['Armature|mixamo.com|Layer0'].play()
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={wrist.nodes.mixamorigHips} />
          <skinnedMesh name="BaseMesh_Female" geometry={wrist.nodes.BaseMesh_Female.geometry} material={wrist.nodes.BaseMesh_Female.material} skeleton={wrist.nodes.BaseMesh_Female.skeleton} />
          {
            props.isWrist &&
            <>
              <skinnedMesh name="Mesh" geometry={wrist.nodes.Mesh.geometry} material={wrist.materials['Material.003']} skeleton={wrist.nodes.Mesh.skeleton} />
              <skinnedMesh name="Mesh001" geometry={wrist.nodes.Mesh001.geometry} material={wrist.materials['Material.004']} skeleton={wrist.nodes.Mesh001.skeleton} />
              </>
          }
          {
            props.isLeggins && <skinnedMesh name="Mesh" geometry={leggins.nodes.Mesh.geometry} material={leggins.materials['Material.001']} skeleton={leggins.nodes.Mesh.skeleton} />
          }


        </group>
      </group>
    </group>
  )
}

export default Wrist

useGLTF.preload('/wrist.glb')
